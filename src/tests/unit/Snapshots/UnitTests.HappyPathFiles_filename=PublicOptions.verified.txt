#nullable enable
namespace Seekatar.OptionToStringGenerator
{
    public static partial class ClassExtensions
    {
        public static string OptionsToString(this Test.PublicOptions o)
        {
            return $"""
                    Test.PublicOptions:
                      PlainText                     : {OptionsToStringAttribute.Format(o.PlainText)}
                      PlainNumber                   : {OptionsToStringAttribute.Format(o.PlainNumber)}
                      PlainDateTime                 : {OptionsToStringAttribute.Format(o.PlainDateTime)}
                      NullItem                      : {OptionsToStringAttribute.Format(o.NullItem)}
                      AnObject                      : {OptionsToStringAttribute.Format(o.AnObject)}
                      AMaskedObject                 : {OptionsToStringAttribute.Format(o.AMaskedObject,regex:"AClass\\:\\s+(.*)")}
                      FullyMasked                   : {OptionsToStringAttribute.Format(o.FullyMasked,prefixLen:0)}
                      FirstThreeNotMasked           : {OptionsToStringAttribute.Format(o.FirstThreeNotMasked,prefixLen:3)}
                      NotMaskedSinceLongLength      : {OptionsToStringAttribute.Format(o.NotMaskedSinceLongLength,prefixLen:100)}
                      LengthOnly                    : {OptionsToStringAttribute.Format(o.LengthOnly,lengthOnly:true,asJson:false)}
                      MaskUserAndPassword           : {OptionsToStringAttribute.Format(o.MaskUserAndPassword,regex:"User Id=([^;]+).*Password=([^;]+)")}
                      MaskUserAndPasswordIgnoreCase : {OptionsToStringAttribute.Format(o.MaskUserAndPasswordIgnoreCase,regex:"User Id=([^;]+).*Password=([^;]+)",ignoreCase:true)}
                      RegexNotMatched               : {OptionsToStringAttribute.Format(o.RegexNotMatched,regex:"User Id=([^;]+).*Password=([^;]+)")}
                    """;
        }

    }
}
#nullable enable
using static Seekatar.Mask;
using System.Linq;
using System;
namespace Seekatar.OptionToStringGenerator
{
    /// <summary>
    /// Class for OptionsToString extension methods.
    /// </summary>
    public static partial class ClassExtensions
    {
        /// <summary>
        /// Converts the options to a string representation.
        /// </summary>
        /// <param name="o">object</param>
        /// <param name="extraIndent">any extra indent</param>
        /// <param name="titleSuffix">suffix for the title of the object</param>
        /// <returns>string representation of values, redacted as configured</returns>
        internal static string OptionsToString(this Test.MaskingOptions? o, string extraIndent = "", string titleSuffix = "")
        {
            return $@"Test.MaskingOptions{titleSuffix}:
{extraIndent}  Masked             : {Format(o?.Masked,prefixLen:0,suffixLen:0)}
{extraIndent}  MaskedPrefix       : {Format(o?.MaskedPrefix,prefixLen:3,suffixLen:0)}
{extraIndent}  MaskedSuffix       : {Format(o?.MaskedSuffix,prefixLen:0,suffixLen:3)}
{extraIndent}  MaskedPrefixSuffix : {Format(o?.MaskedPrefixSuffix,prefixLen:3,suffixLen:3)}
{extraIndent}  MaskedPrefixTooBig : {Format(o?.MaskedPrefixTooBig,prefixLen:100,suffixLen:0)}
{extraIndent}  MaskedSuffixTooBig : {Format(o?.MaskedSuffixTooBig,prefixLen:0,suffixLen:100)}
{extraIndent}  MaskedBothTooBig   : {Format(o?.MaskedBothTooBig,prefixLen:100,suffixLen:100)}
{extraIndent}  Empty              : {Format(o?.Empty,prefixLen:10,suffixLen:10)}
{extraIndent}  Negative           : {Format(o?.Negative,prefixLen:-10,suffixLen:-10)}
{extraIndent}  Zero               : {Format(o?.Zero,prefixLen:0,suffixLen:0)}
";
        }
    }
}

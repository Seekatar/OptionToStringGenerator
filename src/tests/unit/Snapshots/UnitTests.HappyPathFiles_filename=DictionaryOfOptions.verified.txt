#nullable enable
using static Seekatar.Mask;
using System.Linq;
using System;
namespace Seekatar.OptionToStringGenerator
{
    /// <summary>
    /// Class for OptionsToString extension methods.
    /// </summary>
    public static partial class ClassExtensions
    {
        /// <summary>
        /// Converts the options to a string representation.
        /// </summary>
        /// <param name="o">object</param>
        /// <param name="extraIndent">any extra indent</param>
        /// <param name="titleSuffix">suffix for the title of the object</param>
        /// <returns>string representation of values, redacted as configured</returns>
        public static string OptionsToString(this Test.DictionaryOptions? o, string extraIndent = "", string titleSuffix = "")
        {
            return $@"Test.DictionaryOptions{titleSuffix}:
{extraIndent}  StringToProfiles              : {Format(o?.StringToProfiles,formatMethod:(o) => { return Environment.NewLine + $"{extraIndent}    Count: {o?.Count() ?? 0}" + Environment.NewLine + $"{extraIndent}    "+ string.Join($"{extraIndent}    ", o?.Select( oo => oo.Value.OptionsToString("    "+ extraIndent, $"[{Mask.Quote(oo.Key)}]") ?? "null") ?? Enumerable.Empty<string>());},noQuote:true)}
{extraIndent}  StringToProfilesInterface     : {Format(o?.StringToProfilesInterface,formatMethod:(o) => { return Environment.NewLine + $"{extraIndent}    Count: {o?.Count() ?? 0}" + Environment.NewLine + $"{extraIndent}    "+ string.Join($"{extraIndent}    ", o?.Select( oo => oo.Value.OptionsToString("    "+ extraIndent, $"[{Mask.Quote(oo.Key)}]") ?? "null") ?? Enumerable.Empty<string>());},noQuote:true)}
{extraIndent}  NullStringToProfilesInterface : {Format(o?.NullStringToProfilesInterface,formatMethod:(o) => { return Environment.NewLine + $"{extraIndent}    Count: {o?.Count() ?? 0}" + Environment.NewLine + $"{extraIndent}    "+ string.Join($"{extraIndent}    ", o?.Select( oo => oo.Value.OptionsToString("    "+ extraIndent, $"[{Mask.Quote(oo.Key)}]") ?? "null") ?? Enumerable.Empty<string>());},noQuote:true)}
{extraIndent}  IntToProfiles                 : {Format(o?.IntToProfiles,formatMethod:(o) => { return Environment.NewLine + $"{extraIndent}    Count: {o?.Count() ?? 0}" + Environment.NewLine + $"{extraIndent}    "+ string.Join($"{extraIndent}    ", o?.Select( oo => oo.Value.OptionsToString("    "+ extraIndent, $"[{Mask.Quote(oo.Key)}]") ?? "null") ?? Enumerable.Empty<string>());},noQuote:true)}
{extraIndent}  Retries                       : {Format(o?.Retries)}
{extraIndent}  RetryDelaySeconds             : {Format(o?.RetryDelaySeconds)}
";
        }
        /// <summary>
        /// Converts the options to a string representation.
        /// </summary>
        /// <param name="o">object</param>
        /// <param name="extraIndent">any extra indent</param>
        /// <param name="titleSuffix">suffix for the title of the object</param>
        /// <returns>string representation of values, redacted as configured</returns>
        public static string OptionsToString(this Test.DictionaryOptions.DictionaryItem? o, string extraIndent = "", string titleSuffix = "")
        {
            return $@"Test.DictionaryOptions.DictionaryItem{titleSuffix}:
{extraIndent}  ProfileName    : {Format(o?.ProfileName)}
{extraIndent}  DeploymentName : {Format(o?.DeploymentName)}
";
        }
    }
}

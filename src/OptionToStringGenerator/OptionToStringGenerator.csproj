<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>Seekatar.$(MSBuildProjectName)</AssemblyName>
    <PackageId>Seekatar.$(MSBuildProjectName)</PackageId>
    <!-- ðŸ‘‡ Source generators must target netstandard 2.0 -->
    <TargetFramework>netstandard2.0</TargetFramework>
    <!-- ðŸ‘‡ We don't want to reference the source generator dll directly in consuming projects -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <Nullable>enable</Nullable>
    <ImplicitUsings>true</ImplicitUsings>
    <LangVersion>Latest</LangVersion>
    <RootNamespace>Seekatar.$(MSBuildProjectName.Replace(" ", "_"))</RootNamespace>
    <!-- Adds rules about analyzers
    https://stackoverflow.com/questions/75734009/what-are-the-effects-of-the-enforceextendedanalyzerrules-flag-in-the-project-f
    https://github.com/dotnet/roslyn-analyzers/blob/main/src/Microsoft.CodeAnalysis.Analyzers/Core/AnalyzerBannedSymbols.txt
    -->
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <Authors>Seekatar.</Authors>
    <Company>Seekatar</Company>
    <RepositoryUrl>https://github.com/seekatar/OptionToStringGenerator</RepositoryUrl>
    <Description>
    This library contains an incremental source generator for formatting configuration objects.
    </Description>
    <Copyright>Copyright (c) 2023</Copyright>
    <PackageProjectUrl>https://github.com/Seekatar/OptionToStringGenerator</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageTags>.net;core;configuration;tools</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>

    <EnablePackageValidation>true</EnablePackageValidation>
    <PackageValidationBaselineVersion>0.2.2</PackageValidationBaselineVersion>

    <!-- added for source links  (also need PackageProjectUrl)-->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <!-- Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>

    <!-- Recommended: Embed symbols containing Source Link in the main file (exe/dll) -->
    <DebugType>embedded</DebugType>

  </PropertyGroup>

  <!-- added for source links  for deterministic builds -->
  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="bin\**" />
    <EmbeddedResource Remove="bin\**" />
    <None Remove="bin\**" />
  </ItemGroup>

  <ItemGroup>
    <None Include="README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <!-- The following libraries include the source generator interfaces and types we need -->
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.3" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.3.1" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Attributes\Attributes.csproj" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="bin\Debug\netstandard2.0\\OptionToStringGenerator.dll" />
  </ItemGroup>

  <!-- csproj magic from https://andrewlock.net/creating-a-source-generator-part-8-solving-the-source-generator-marker-attribute-problem-part2/ -->
  <!-- This ensures the attribute dll and generator dlls get packed correctly -->
  <ItemGroup>
    <!-- Pack the generator dll in the analyzers/dotnet/cs path -->
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />

    <!-- Pack the attributes dll in the analyzers/dotnet/cs path -->
    <None Include="$(OutputPath)\OptionToString.Attributes.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />

    <!-- Pack the attributes dll in the lib\netstandard2.0 path -->
    <None Include="$(OutputPath)\OptionToString.Attributes.dll" Pack="true" PackagePath="lib\netstandard2.0" Visible="true" />
  </ItemGroup>

</Project>